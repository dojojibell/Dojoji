[{"/Users/ivopascoal/Desktop/MAXBID/src/index.tsx":"1","/Users/ivopascoal/Desktop/MAXBID/src/styles/index.ts":"2","/Users/ivopascoal/Desktop/MAXBID/src/components/global/App.tsx":"3","/Users/ivopascoal/Desktop/MAXBID/src/utils/theme.ts":"4","/Users/ivopascoal/Desktop/MAXBID/src/components/global/Layout.tsx":"5","/Users/ivopascoal/Desktop/MAXBID/src/contexts/ui.tsx":"6","/Users/ivopascoal/Desktop/MAXBID/src/contexts/notifications.tsx":"7","/Users/ivopascoal/Desktop/MAXBID/src/contexts/wallet.tsx":"8","/Users/ivopascoal/Desktop/MAXBID/src/contexts/data.tsx":"9","/Users/ivopascoal/Desktop/MAXBID/src/contexts/contracts.tsx":"10","/Users/ivopascoal/Desktop/MAXBID/src/components/shared/Notification.tsx":"11","/Users/ivopascoal/Desktop/MAXBID/src/config.tsx":"12","/Users/ivopascoal/Desktop/MAXBID/src/modals/WithdrawModal.tsx":"13","/Users/ivopascoal/Desktop/MAXBID/src/hooks/useTokenInfo.tsx":"14","/Users/ivopascoal/Desktop/MAXBID/src/utils/big-number.ts":"15","/Users/ivopascoal/Desktop/MAXBID/src/utils/promise.ts":"16","/Users/ivopascoal/Desktop/MAXBID/src/hooks/usePosition.tsx":"17","/Users/ivopascoal/Desktop/MAXBID/src/components/global/Header.tsx":"18","/Users/ivopascoal/Desktop/MAXBID/src/components/global/ConnectWallet.tsx":"19","/Users/ivopascoal/Desktop/MAXBID/src/utils/request.ts":"20","/Users/ivopascoal/Desktop/MAXBID/src/utils/cache.ts":"21","/Users/ivopascoal/Desktop/MAXBID/src/modals/StakeModal.tsx":"22","/Users/ivopascoal/Desktop/MAXBID/src/modals/UnstakeModal.tsx":"23","/Users/ivopascoal/Desktop/MAXBID/src/pages/Positions.tsx":"24","/Users/ivopascoal/Desktop/MAXBID/src/pages/Mint.tsx":"25"},{"size":172,"mtime":1629831700000,"results":"26","hashOfConfig":"27"},{"size":23,"mtime":1629831700000,"results":"28","hashOfConfig":"27"},{"size":1630,"mtime":1629831700000,"results":"29","hashOfConfig":"27"},{"size":1308,"mtime":1660769207836,"results":"30","hashOfConfig":"27"},{"size":6003,"mtime":1661341298696,"results":"31","hashOfConfig":"27"},{"size":935,"mtime":1629831700000,"results":"32","hashOfConfig":"27"},{"size":2303,"mtime":1629831700000,"results":"33","hashOfConfig":"27"},{"size":3240,"mtime":1629831700000,"results":"34","hashOfConfig":"27"},{"size":8003,"mtime":1629831700000,"results":"35","hashOfConfig":"27"},{"size":3797,"mtime":1657715499292,"results":"36","hashOfConfig":"27"},{"size":3418,"mtime":1629831700000,"results":"37","hashOfConfig":"27"},{"size":1848,"mtime":1660518525322,"results":"38","hashOfConfig":"27"},{"size":2817,"mtime":1629831700000,"results":"39","hashOfConfig":"27"},{"size":1780,"mtime":1629831700000,"results":"40","hashOfConfig":"27"},{"size":557,"mtime":1629831700000,"results":"41","hashOfConfig":"27"},{"size":86,"mtime":1629831700000,"results":"42","hashOfConfig":"27"},{"size":4538,"mtime":1629831700000,"results":"43","hashOfConfig":"27"},{"size":1551,"mtime":1660826247359,"results":"44","hashOfConfig":"27"},{"size":3039,"mtime":1629831700000,"results":"45","hashOfConfig":"27"},{"size":540,"mtime":1629831700000,"results":"46","hashOfConfig":"27"},{"size":390,"mtime":1629831700000,"results":"47","hashOfConfig":"27"},{"size":3065,"mtime":1629831700000,"results":"48","hashOfConfig":"27"},{"size":1952,"mtime":1629831700000,"results":"49","hashOfConfig":"27"},{"size":10753,"mtime":1660822174287,"results":"50","hashOfConfig":"27"},{"size":6338,"mtime":1660834959304,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"13tph01",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},"/Users/ivopascoal/Desktop/MAXBID/src/index.tsx",[],["105","106"],"/Users/ivopascoal/Desktop/MAXBID/src/styles/index.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/components/global/App.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/utils/theme.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/components/global/Layout.tsx",["107","108","109"],"/Users/ivopascoal/Desktop/MAXBID/src/contexts/ui.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/contexts/notifications.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/contexts/wallet.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/contexts/data.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/contexts/contracts.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/components/shared/Notification.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/config.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/modals/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/hooks/useTokenInfo.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/utils/big-number.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/utils/promise.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/hooks/usePosition.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/components/global/Header.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/components/global/ConnectWallet.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/utils/request.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/utils/cache.ts",[],"/Users/ivopascoal/Desktop/MAXBID/src/modals/StakeModal.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/modals/UnstakeModal.tsx",[],"/Users/ivopascoal/Desktop/MAXBID/src/pages/Positions.tsx",["110"],"import { FC, useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport * as ethers from 'ethers';\nimport { Box, Paper } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport moment from 'moment';\nimport uniswap from './uniswap.png';\nimport { useWallet } from 'contexts/wallet';\nimport { useContracts } from 'contexts/contracts';\nimport { useNotifications } from 'contexts/notifications';\nimport { useData } from 'contexts/data';\nimport { LiquidityPosition } from 'utils/types';\nimport { formatUnits } from 'utils/big-number';\n\nexport const useStyles = makeStyles((theme) => ({\n  maxButton: {\n    height: 35,\n  },\n  depositButtonCell: {\n    width: 110,\n    padding: 5,\n  },\n  depositButton: {\n    width: 100,\n  },\n}));\n\nconst Stake: FC<{ history: any }> = ({ history }) => {\n  const classes = useStyles();\n  const { startConnecting: startConnectingWallet, address } = useWallet();\n  const {\n    token0Address,\n    token1Address,\n    token0Symbol,\n    token1Symbol,\n  } = useContracts();\n  const {\n    positions,\n    currentIncentiveId,\n    incentives,\n    setCurrentIncentiveId,\n  } = useData();\n\n  return (\n    <Paper\n      style={{\n        backgroundImage: 'url(uniswap.png)',\n        backgroundSize: 'cover',\n      }}\n    >\n      <Box p={5}>\n        {!address ? (\n          <>\n            <Box\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n              }}\n            >\n              <div>\n                <Typography variant='h5'>\n                  $DOJOJI UniswapV3 Liquidity incentive program.\n                </Typography>\n                <Box>\n                  <Typography variant='subtitle1'>\n                    When the time is right the reward comes for those who were\n                    patient...\n                  </Typography>\n                </Box>\n              </div>\n            </Box>\n\n            <Box mt={2}>\n              <Button\n                color='secondary'\n                variant='contained'\n                onClick={startConnectingWallet}\n              >\n                Connect Wallet\n              </Button>\n            </Box>\n          </>\n        ) : (\n          <>\n            <Box>\n              <Typography>\n                You have {positions.length} {token0Symbol}-{token1Symbol}{' '}\n                liquidity positions.\n              </Typography>\n            </Box>\n\n            <Box>\n              <Typography variant='caption'>\n                Get {!positions.length ? 'some' : 'more'} by providing liquidity\n                to the {token0Symbol}-{token1Symbol} Pool over{' '}\n                <a\n                  href={`https://app.uniswap.org/#/add/${[\n                    token1Address,\n                    token0Address,\n                  ].join('/')}`}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  here\n                </a>\n                .\n              </Typography>\n            </Box>\n\n            <Box m={2} mt={3} className='flex flex-grow justify-space'>\n              <FormControl>\n                {!currentIncentiveId ? null : (\n                  <>\n                    <InputLabel id='incentive-label' shrink>\n                      Incentive\n                    </InputLabel>\n                    <Select\n                      labelId='incentive-label'\n                      id='incentive'\n                      value={currentIncentiveId}\n                      displayEmpty\n                      onChange={(e) => {\n                        setCurrentIncentiveId(e.target.value as string);\n                      }}\n                    >\n                      {incentives.map((incentive) => (\n                        <MenuItem value={incentive.id} key={incentive.id}>\n                          {formatTimestamp(incentive.key.startTime)} -{' '}\n                          {formatTimestamp(incentive.key.endTime)}{' '}\n                          {incentive.ended ? 'ENDED' : ''}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </>\n                )}\n              </FormControl>\n\n              <ClaimAvailableReward />\n            </Box>\n\n            {!positions.length ? null : (\n              <Box mt={2}>\n                <Table aria-label='Loans' size={'small'}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>ID</TableCell>\n                      <TableCell>Rewards</TableCell>\n                      <TableCell\n                        align='right'\n                        className={classes.depositButtonCell}\n                      ></TableCell>\n                      <TableCell\n                        align='right'\n                        className={classes.depositButtonCell}\n                      ></TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {positions.map((position) => (\n                      <LiquidityPositionTableRow\n                        key={position.tokenId}\n                        {...{ position, history }}\n                      />\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nconst LiquidityPositionTableRow: FC<{\n  position: LiquidityPosition;\n  history: any;\n}> = ({ position, history }) => {\n  const classes = useStyles();\n  const { address } = useWallet();\n  const { token0Decimals } = useContracts();\n\n  const stake = useCallback(async () => {\n    history.push(`/stake/${position.tokenId}`);\n  }, [position.tokenId, history]);\n\n  const unstake = useCallback(async () => {\n    history.push(`/unstake/${position.tokenId}`);\n  }, [position.tokenId, history]);\n\n  const withdraw = useCallback(async () => {\n    history.push(`/withdraw/${position.tokenId}`);\n  }, [position.tokenId, history]);\n\n  return (\n    <TableRow>\n      <TableCell component='th' scope='row'>\n        {position.tokenId.toString()}\n      </TableCell>\n      <TableCell>\n        {!position.reward.isZero() ? (\n          <Box className='flex items-center'>\n            <Box mr={1}>{formatUnits(position.reward, token0Decimals)}</Box>\n            <Tooltip\n              title='Unstake position in order to claim accrued rewards.'\n              arrow\n              placement='top'\n            >\n              <Box className='flex items-center cursor'>\n                <InfoIcon fontSize='small' />\n              </Box>\n            </Tooltip>\n          </Box>\n        ) : (\n          '-'\n        )}\n      </TableCell>\n      <TableCell align='right' className={classes.depositButtonCell}>\n        <Button\n          color='secondary'\n          variant='contained'\n          onClick={position.staked ? unstake : stake}\n          className={classes.depositButton}\n        >\n          {position.staked ? 'Unstake' : 'Stake'}\n        </Button>\n      </TableCell>\n      <TableCell align='right' className={classes.depositButtonCell}>\n        <Button\n          color='secondary'\n          variant='contained'\n          onClick={withdraw}\n          className={classes.depositButton}\n          disabled={position.owner === address}\n        >\n          Withdraw\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst ClaimAvailableReward: FC = () => {\n  const classes = useStyles();\n  const { stakingRewardsContract } = useContracts();\n  const {\n    currentIncentiveRewardTokenSymbol,\n    currentIncentiveRewardTokenDecimals,\n    currentIncentive,\n  } = useData();\n  const { address } = useWallet();\n  const { tx } = useNotifications();\n\n  const [reward, setReward] = useState(ethers.BigNumber.from(0));\n  const [isClaiming, setIsClaiming] = useState(false);\n\n  useEffect(() => {\n    if (!(stakingRewardsContract && currentIncentive && address)) return;\n\n    let isMounted = true;\n    const unsubs = [\n      () => {\n        isMounted = false;\n      },\n    ];\n\n    const load = async () => {\n      const reward = await stakingRewardsContract.rewards(\n        currentIncentive.key.rewardToken,\n        address\n      );\n      if (isMounted) setReward(reward);\n    };\n\n    const subscribe = () => {\n      const tokenUnstakedEvent = stakingRewardsContract.filters.TokenUnstaked();\n      stakingRewardsContract.on(tokenUnstakedEvent, load);\n      unsubs.push(() => {\n        stakingRewardsContract.off(tokenUnstakedEvent, load);\n      });\n\n      const rewardClaimedEvent = stakingRewardsContract.filters.RewardClaimed();\n      stakingRewardsContract.on(rewardClaimedEvent, load);\n      unsubs.push(() => {\n        stakingRewardsContract.off(rewardClaimedEvent, load);\n      });\n    };\n\n    load();\n    subscribe();\n\n    return () => {\n      unsubs.map((u) => u());\n    };\n  }, [stakingRewardsContract, currentIncentive, address]);\n\n  const claim = async () => {\n    if (!(stakingRewardsContract && currentIncentive)) return;\n\n    try {\n      setIsClaiming(true);\n      const reward = await stakingRewardsContract.rewards(\n        currentIncentive.key.rewardToken,\n        address\n      );\n      await tx('Claiming...', 'Claimed!', () =>\n        stakingRewardsContract.claimReward(\n          currentIncentive.key.rewardToken,\n          address,\n          reward\n        )\n      );\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setIsClaiming(false);\n    }\n  };\n\n  return (\n    <Box className='flex items-center'>\n      <Box mr={1}>REWARDS:</Box>{' '}\n      <Box mr={2}>\n        {formatUnits(reward, currentIncentiveRewardTokenDecimals)}{' '}\n        {currentIncentiveRewardTokenSymbol}\n      </Box>\n      <Button\n        color='secondary'\n        variant='contained'\n        onClick={claim}\n        className={classes.depositButton}\n        disabled={isClaiming || reward.isZero()}\n      >\n        {isClaiming ? 'Claiming...' : 'Claim'}\n      </Button>\n    </Box>\n  );\n};\n\nfunction formatTimestamp(unix: number) {\n  return moment.unix(unix).local().format('YYYY-MM-DD HHmm[h]');\n}\n\nexport default withRouter(Stake);\n","/Users/ivopascoal/Desktop/MAXBID/src/pages/Mint.tsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import { FC, useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport * as ethers from 'ethers';\nimport { Box, Paper } from '@material-ui/core';\nimport { positions } from '@material-ui/system';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport moment from 'moment';\nimport dragon from './dragon.png';\nimport bell from './bell.gif';\nimport { useWallet } from 'contexts/wallet';\nimport { useContracts } from 'contexts/contracts';\nimport { useNotifications } from 'contexts/notifications';\nimport { useData } from 'contexts/data';\nimport { LiquidityPosition } from 'utils/types';\nimport { formatUnits } from 'utils/big-number';\n\nexport const useStyles = makeStyles((theme) => ({\n  maxButton: {\n    height: 35,\n  },\n  depositButtonCell: {\n    width: 110,\n    padding: 5,\n  },\n  depositButton: {\n    width: 100,\n  },\n}));\n\nconst Mint: FC<{ history: any }> = ({ history }) => {\n  const classes = useStyles();\n  const { nftManagerPositionsContract } = useContracts();\n  const {\n    startConnecting: startConnectingWallet,\n    address,\n    signer,\n  } = useWallet();\n  const {\n    token0Address,\n    token1Address,\n    token0Symbol,\n    token1Symbol,\n  } = useContracts();\n  const {\n    positions,\n    currentIncentiveId,\n    incentives,\n    setCurrentIncentiveId,\n  } = useData();\n\n  const isholder = async () => {\n    if (!nftManagerPositionsContract) return false;\n    const [balance] = await Promise.all([\n      nftManagerPositionsContract.balanceof(address),\n    ]);\n    if (balance > 0) return true;\n    else return false;\n  };\n  const mintBell = async () => {\n    if (!nftManagerPositionsContract) return;\n    const [minting] = await Promise.all([\n      nftManagerPositionsContract.getApproved(address, {\n        value: ethers.utils.parseEther('0.015'),\n      }),\n    ]);\n  };\n  return (\n    <>\n      <div style={{ fontSize: '5rem', color: '#332B1C' }}>\n        The Tale <a style={{ color: '#873340' }}>Begins </a>\n      </div>\n      <div style={{ fontSize: '1.3rem', marginLeft: '3%', marginTop: '5%' }}>\n        The Bell of Dojoji is a tale that must be written on the Blockchain to\n        live it's glory for the future generations!\n        <p>\n          A{' '}\n          <a style={{ fontSize: '1.4rem', color: '#332B1C' }}>\n            trustless contract\n          </a>{' '}\n          has been deployed where each mint will ring the Bell...\n        </p>\n        <p>\n          Upon reaching MaxSupply of 777 Bells the trading of{' '}\n          <a style={{ fontSize: '1.4rem', color: '#332B1C' }}>$DOJOJI</a> begins\n          and its full glory shall be unleashed!\n        </p>\n        <p>\n          Maximum of{' '}\n          <a style={{ fontSize: '1.4rem', color: '#332B1C' }}>1 Bell/wallet</a>{' '}\n          at the fair price of{' '}\n          <a style={{ fontSize: '1.4rem', color: '#873340' }}>0.015ETH </a>\n          to avoid jeets and botting to trigger the launch!\n        </p>\n        <p>\n          The Lucky Original Ringers holders will have 0% tax privileges on the\n          token and a few surprizes for the longrun...{' '}\n        </p>\n      </div>\n      <Box\n        m={5}\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          width: '100%',\n\n          marginLeft: '0',\n          marginTop: '10%',\n        }}\n      >\n        <Paper\n          style={{\n            backgroundImage: 'url(bellbackground.png)',\n            backgroundSize: 'cover',\n            position: 'relative',\n            width: '33%',\n            marginRight: '5%',\n          }}\n        >\n          <Box display={'flex'} flexDirection={'column'}>\n            <Box>\n              <img\n                src={bell}\n                alt='cloud'\n                style={{\n                  position: 'relative',\n                  width: '100%',\n                  left: '1.5vmin',\n                  top: '7vmin',\n                }}\n              />\n            </Box>\n            <div></div>\n          </Box>\n        </Paper>\n\n        <Box>\n          <div\n            style={{ fontSize: '1.3rem', marginLeft: '3%', marginTop: '3%' }}\n          >\n            With each Ring of the Bell we become stronger and closer to the\n            release of{' '}\n            <a style={{ fontSize: '1.4rem', color: '#332B1C' }}>$DOJOJI</a>\n            <p>\n              Don't be{' '}\n              <a style={{ fontSize: '1.4rem', color: '#873340' }}> Greedy </a>in\n              the mint... the purpose is to create a strong and united community\n              of Chads ready to make this fly!\n            </p>\n            <p>\n              {' '}\n              <a style={{ fontSize: '4.4rem', color: '#873340' }}>0/777</a>\n              <a style={{ fontSize: '3.4rem', color: '#FFFFF' }}> Bells Rung</a>\n            </p>\n            <Button\n              color='secondary'\n              variant='contained'\n              onClick={mintBell}\n              className={classes.depositButton}\n              style={{\n                display: 'flex',\n                fontSize: '1.1rem',\n                width: '33%',\n              }}\n            >\n              {' '}\n              <div>Mint {'&'} Ring </div>\n            </Button>{' '}\n            <p>\n              {' '}\n              <a style={{ fontSize: '1.4rem', color: '#873340' }}>\n                WARNING!\n              </a>{' '}\n              Bots WILL get REKT!{' '}\n              <a style={{ fontSize: '1.4rem', color: '#873340' }}>WARNING!</a>\n            </p>\n          </div>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nfunction formatTimestamp(unix: number) {\n  return moment.unix(unix).local().format('YYYY-MM-DD HHmm[h]');\n}\n\nexport default withRouter(Mint);\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":15,"nodeType":"161","messageId":"162","endLine":3,"endColumn":20},{"ruleId":"159","severity":1,"message":"163","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":203,"column":17,"nodeType":"166","endLine":203,"endColumn":29},{"ruleId":"159","severity":1,"message":"167","line":20,"column":8,"nodeType":"161","messageId":"162","endLine":20,"endColumn":15},{"ruleId":"159","severity":1,"message":"168","line":1,"column":14,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":35},{"ruleId":"159","severity":1,"message":"170","line":1,"column":37,"nodeType":"161","messageId":"162","endLine":1,"endColumn":46},{"ruleId":"159","severity":1,"message":"171","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":19},{"ruleId":"159","severity":1,"message":"172","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":18},{"ruleId":"159","severity":1,"message":"173","line":9,"column":8,"nodeType":"161","messageId":"162","endLine":9,"endColumn":13},{"ruleId":"159","severity":1,"message":"174","line":10,"column":8,"nodeType":"161","messageId":"162","endLine":10,"endColumn":17},{"ruleId":"159","severity":1,"message":"175","line":11,"column":8,"nodeType":"161","messageId":"162","endLine":11,"endColumn":17},{"ruleId":"159","severity":1,"message":"176","line":12,"column":8,"nodeType":"161","messageId":"162","endLine":12,"endColumn":16},{"ruleId":"159","severity":1,"message":"177","line":13,"column":8,"nodeType":"161","messageId":"162","endLine":13,"endColumn":17},{"ruleId":"159","severity":1,"message":"178","line":14,"column":8,"nodeType":"161","messageId":"162","endLine":14,"endColumn":14},{"ruleId":"159","severity":1,"message":"179","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":16},{"ruleId":"159","severity":1,"message":"180","line":16,"column":8,"nodeType":"161","messageId":"162","endLine":16,"endColumn":18},{"ruleId":"159","severity":1,"message":"181","line":17,"column":8,"nodeType":"161","messageId":"162","endLine":17,"endColumn":19},{"ruleId":"159","severity":1,"message":"182","line":18,"column":8,"nodeType":"161","messageId":"162","endLine":18,"endColumn":15},{"ruleId":"159","severity":1,"message":"183","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":16},{"ruleId":"159","severity":1,"message":"184","line":21,"column":8,"nodeType":"161","messageId":"162","endLine":21,"endColumn":14},{"ruleId":"159","severity":1,"message":"185","line":25,"column":10,"nodeType":"161","messageId":"162","endLine":25,"endColumn":26},{"ruleId":"159","severity":1,"message":"186","line":27,"column":10,"nodeType":"161","messageId":"162","endLine":27,"endColumn":27},{"ruleId":"159","severity":1,"message":"187","line":28,"column":10,"nodeType":"161","messageId":"162","endLine":28,"endColumn":21},{"ruleId":"159","severity":1,"message":"188","line":47,"column":22,"nodeType":"161","messageId":"162","endLine":47,"endColumn":43},{"ruleId":"159","severity":1,"message":"189","line":49,"column":5,"nodeType":"161","messageId":"162","endLine":49,"endColumn":11},{"ruleId":"159","severity":1,"message":"190","line":52,"column":5,"nodeType":"161","messageId":"162","endLine":52,"endColumn":18},{"ruleId":"159","severity":1,"message":"191","line":53,"column":5,"nodeType":"161","messageId":"162","endLine":53,"endColumn":18},{"ruleId":"159","severity":1,"message":"192","line":54,"column":5,"nodeType":"161","messageId":"162","endLine":54,"endColumn":17},{"ruleId":"159","severity":1,"message":"193","line":55,"column":5,"nodeType":"161","messageId":"162","endLine":55,"endColumn":17},{"ruleId":"159","severity":1,"message":"194","line":58,"column":5,"nodeType":"161","messageId":"162","endLine":58,"endColumn":14},{"ruleId":"159","severity":1,"message":"195","line":59,"column":5,"nodeType":"161","messageId":"162","endLine":59,"endColumn":23},{"ruleId":"159","severity":1,"message":"196","line":60,"column":5,"nodeType":"161","messageId":"162","endLine":60,"endColumn":15},{"ruleId":"159","severity":1,"message":"197","line":61,"column":5,"nodeType":"161","messageId":"162","endLine":61,"endColumn":26},{"ruleId":"159","severity":1,"message":"198","line":64,"column":9,"nodeType":"161","messageId":"162","endLine":64,"endColumn":17},{"ruleId":"159","severity":1,"message":"199","line":74,"column":12,"nodeType":"161","messageId":"162","endLine":74,"endColumn":19},{"ruleId":"164","severity":1,"message":"200","line":83,"column":18,"nodeType":"166","endLine":83,"endColumn":50},{"ruleId":"164","severity":1,"message":"200","line":90,"column":11,"nodeType":"166","endLine":90,"endColumn":63},{"ruleId":"164","severity":1,"message":"200","line":97,"column":11,"nodeType":"166","endLine":97,"endColumn":63},{"ruleId":"164","severity":1,"message":"200","line":102,"column":11,"nodeType":"166","endLine":102,"endColumn":63},{"ruleId":"164","severity":1,"message":"200","line":104,"column":11,"nodeType":"166","endLine":104,"endColumn":63},{"ruleId":"164","severity":1,"message":"200","line":155,"column":13,"nodeType":"166","endLine":155,"endColumn":65},{"ruleId":"164","severity":1,"message":"200","line":158,"column":15,"nodeType":"166","endLine":158,"endColumn":67},{"ruleId":"164","severity":1,"message":"200","line":164,"column":15,"nodeType":"166","endLine":164,"endColumn":67},{"ruleId":"164","severity":1,"message":"200","line":165,"column":15,"nodeType":"166","endLine":165,"endColumn":66},{"ruleId":"164","severity":1,"message":"200","line":183,"column":15,"nodeType":"166","endLine":183,"endColumn":67},{"ruleId":"164","severity":1,"message":"200","line":187,"column":15,"nodeType":"166","endLine":187,"endColumn":67},{"ruleId":"159","severity":1,"message":"201","line":196,"column":10,"nodeType":"161","messageId":"162","endLine":196,"endColumn":25},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'uniswap' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'positions' is defined but never used.","'Typography' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'Tooltip' is defined but never used.","'InfoIcon' is defined but never used.","'dragon' is defined but never used.","'useNotifications' is defined but never used.","'LiquidityPosition' is defined but never used.","'formatUnits' is defined but never used.","'startConnectingWallet' is assigned a value but never used.","'signer' is assigned a value but never used.","'token0Address' is assigned a value but never used.","'token1Address' is assigned a value but never used.","'token0Symbol' is assigned a value but never used.","'token1Symbol' is assigned a value but never used.","'positions' is assigned a value but never used.","'currentIncentiveId' is assigned a value but never used.","'incentives' is assigned a value but never used.","'setCurrentIncentiveId' is assigned a value but never used.","'isholder' is assigned a value but never used.","'minting' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'formatTimestamp' is defined but never used.","no-global-assign","no-unsafe-negation"]