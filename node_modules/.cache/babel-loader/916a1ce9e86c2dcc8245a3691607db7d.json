{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/MAXBID/src/modals/StakeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport capitalize from 'lodash/capitalize';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useContracts } from 'contexts/contracts';\nimport usePosition from 'hooks/usePosition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    width: 600\n  }\n}));\nconst STEPS = ['approve', 'transfer', 'stake'];\n\nconst StakeStepper = ({\n  match: {\n    params: {\n      tokenId\n    }\n  },\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    nftManagerPositionsContract,\n    stakingRewardsContract\n  } = useContracts();\n  const {\n    isWorking,\n    approve,\n    transfer,\n    stake\n  } = usePosition(parseInt(tokenId));\n  const [activeStep, setActiveStep] = useState(0);\n  useEffect(() => {\n    if (!(stakingRewardsContract && nftManagerPositionsContract)) return;\n\n    const load = async () => {\n      const [approvedAddress, owner] = await Promise.all([nftManagerPositionsContract.getApproved(tokenId), nftManagerPositionsContract.ownerOf(tokenId)]);\n\n      if (owner === stakingRewardsContract.address) {\n        setActiveStep(2);\n      } else if (approvedAddress === stakingRewardsContract.address) {\n        setActiveStep(1);\n      }\n    };\n\n    load();\n  }, [tokenId, stakingRewardsContract, nftManagerPositionsContract]);\n\n  const close = () => history.push('/');\n\n  const approveOrTransferOrStake = () => {\n    switch (activeStep) {\n      case 0:\n        return approve(() => setActiveStep(1));\n\n      case 1:\n        return transfer(() => setActiveStep(2));\n\n      case 2:\n        return stake(() => history.push('/'));\n\n      default:\n        console.warn(`unknown step: ${activeStep}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: () => {},\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        px: 4,\n        mt: 2,\n        className: \"flex flex-grow justify-space items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"Stake #\", tokenId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: \"cursor-pointer\",\n          onClick: close\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        children: STEPS.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: capitalize(label)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        px: 4,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: approveOrTransferOrStake,\n          children: isWorking ? isWorking : STEPS[activeStep]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakeStepper, \"qsq1angnPRIqorbGYg6wTUA/z8I=\", false, function () {\n  return [useStyles, useContracts, usePosition];\n});\n\n_c = StakeStepper;\nexport default StakeStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeStepper\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/MAXBID/src/modals/StakeModal.tsx"],"names":["useState","useEffect","makeStyles","Box","Dialog","Typography","Stepper","Step","StepLabel","Button","capitalize","CloseIcon","useContracts","usePosition","useStyles","theme","container","width","STEPS","StakeStepper","match","params","tokenId","history","classes","nftManagerPositionsContract","stakingRewardsContract","isWorking","approve","transfer","stake","parseInt","activeStep","setActiveStep","load","approvedAddress","owner","Promise","all","getApproved","ownerOf","address","close","push","approveOrTransferOrStake","console","warn","map","label"],"mappings":"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","sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport capitalize from 'lodash/capitalize';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { useContracts } from 'contexts/contracts';\nimport usePosition from 'hooks/usePosition';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: 600,\n  },\n}));\n\nconst STEPS = ['approve', 'transfer', 'stake'];\n\nconst StakeStepper: FC<{\n  match: { params: { tokenId: string } };\n  history: any;\n}> = ({\n  match: {\n    params: { tokenId },\n  },\n  history,\n}) => {\n  const classes = useStyles();\n  const {\n    nftManagerPositionsContract,\n    stakingRewardsContract,\n  } = useContracts();\n  const { isWorking, approve, transfer, stake } = usePosition(\n    parseInt(tokenId)\n  );\n\n  const [activeStep, setActiveStep] = useState<number>(0);\n\n  useEffect(() => {\n    if (!(stakingRewardsContract && nftManagerPositionsContract)) return;\n\n    const load = async () => {\n      const [approvedAddress, owner] = await Promise.all([\n        nftManagerPositionsContract.getApproved(tokenId),\n        nftManagerPositionsContract.ownerOf(tokenId),\n      ]);\n      if (owner === stakingRewardsContract.address) {\n        setActiveStep(2);\n      } else if (approvedAddress === stakingRewardsContract.address) {\n        setActiveStep(1);\n      }\n    };\n    load();\n  }, [tokenId, stakingRewardsContract, nftManagerPositionsContract]);\n\n  const close = () => history.push('/');\n\n  const approveOrTransferOrStake = () => {\n    switch (activeStep) {\n      case 0:\n        return approve(() => setActiveStep(1));\n      case 1:\n        return transfer(() => setActiveStep(2));\n      case 2:\n        return stake(() => history.push('/'));\n      default:\n        console.warn(`unknown step: ${activeStep}`);\n    }\n  };\n\n  return (\n    <Dialog open={true} onClose={() => {}}>\n      <Box className={classes.container}>\n        <Box\n          px={4}\n          mt={2}\n          className='flex flex-grow justify-space items-center'\n        >\n          <Typography variant='h5'>Stake #{tokenId}</Typography>\n\n          <CloseIcon className='cursor-pointer' onClick={close} />\n        </Box>\n\n        <Stepper activeStep={activeStep}>\n          {STEPS.map((label) => (\n            <Step key={label}>\n              <StepLabel>{capitalize(label)}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        <Box px={4} mb={2}>\n          <Button\n            color='secondary'\n            variant='contained'\n            onClick={approveOrTransferOrStake}\n          >\n            {isWorking ? isWorking : STEPS[activeStep]}\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default StakeStepper;\n"]},"metadata":{},"sourceType":"module"}