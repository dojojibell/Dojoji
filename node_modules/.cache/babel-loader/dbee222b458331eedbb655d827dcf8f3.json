{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/MAXBID/src/components/shared/Notification.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { ArrowUpward as TxIcon, Done as SuccessIcon, Clear as ErrorIcon, Close as CloseIcon } from '@material-ui/icons';\nimport { useSnackbar } from 'notistack';\nimport { useWallet } from 'contexts/wallet';\nimport { NETWORK_MAINNET } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    color: 'white'\n  },\n  container: {\n    padding: '10px 20px 10px 10px',\n    '& a': {\n      color: 'white',\n      display: 'block',\n      textDecoration: 'underline'\n    }\n  },\n  icon: {\n    // border: '1px solid',\n    // borderRadius: '50%',\n    // padding: 10,\n    marginRight: 10,\n    display: 'inline-flex'\n  },\n  close: {\n    position: 'absolute',\n    top: 5,\n    right: 5,\n    cursor: 'pointer'\n  },\n  tx: {\n    background: '#2196f3'\n  },\n  error: {\n    background: '#d32f2f'\n  },\n  success: {\n    background: '#43a047'\n  },\n  small: {\n    fontSize: 12\n  }\n}));\n\nconst Notification = ({\n  id,\n  notification\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    closeSnackbar\n  } = useSnackbar();\n\n  const clearNotification = () => closeSnackbar(id);\n\n  const TYPES = new Map([['tx', [TxIcon, TxContent]], ['error', [ErrorIcon, ErrorContent]], ['success', [SuccessIcon, SuccessContent]]]);\n  const [, Content] = TYPES.get(notification.type);\n  const notificationClass = useMemo(() => {\n    const c = {\n      tx: classes.tx,\n      error: classes.error,\n      success: classes.success\n    };\n    return c[notification.type];\n  }, [notification.type, classes.error, classes.success, classes.tx]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: clsx(classes.paper, notificationClass),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.close,\n      onClick: clearNotification,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        style: {\n          fontSize: 15\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx('flex', 'flex-grow', 'items-center', classes.container),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx('flex', 'flex-grow', 'flex-col', 'justify-center'),\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          notification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notification, \"dgnXSR9gLyhi5ukYcpWdv6WdmYE=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = Notification;\n\nconst TxContent = ({\n  notification\n}) => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    network\n  } = useWallet();\n  const isMainnet = network === NETWORK_MAINNET;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      className: classes.small,\n      children: notification.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `https://${isMainnet ? '' : `${network}.`}etherscan.io/tx/${notification.hash}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: classes.small,\n      children: \"View on EtherScan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TxContent, \"mpz/+xfJVDOSqu8znOGKXcWuuEU=\", false, function () {\n  return [useStyles, useWallet];\n});\n\n_c2 = TxContent;\n\nconst ErrorContent = ({\n  notification\n}) => {\n  _s3();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      className: clsx(classes.small, classes.error),\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s3(ErrorContent, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ErrorContent;\n\nconst SuccessContent = ({\n  notification\n}) => {\n  _s4();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: notification.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      className: clsx(classes.small, classes.success),\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(SuccessContent, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = SuccessContent;\nexport default Notification;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"TxContent\");\n$RefreshReg$(_c3, \"ErrorContent\");\n$RefreshReg$(_c4, \"SuccessContent\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/MAXBID/src/components/shared/Notification.tsx"],"names":["useMemo","clsx","makeStyles","Paper","ArrowUpward","TxIcon","Done","SuccessIcon","Clear","ErrorIcon","Close","CloseIcon","useSnackbar","useWallet","NETWORK_MAINNET","useStyles","theme","paper","color","container","padding","display","textDecoration","icon","marginRight","close","position","top","right","cursor","tx","background","error","success","small","fontSize","Notification","id","notification","classes","closeSnackbar","clearNotification","TYPES","Map","TxContent","ErrorContent","SuccessContent","Content","get","type","notificationClass","c","network","isMainnet","description","hash","message","title"],"mappings":"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","sourcesContent":["import { FC, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport {\n  ArrowUpward as TxIcon,\n  Done as SuccessIcon,\n  Clear as ErrorIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\nimport { SnackbarKey, useSnackbar } from 'notistack';\nimport { useWallet } from 'contexts/wallet';\nimport { NETWORK_MAINNET } from 'config';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    color: 'white',\n  },\n  container: {\n    padding: '10px 20px 10px 10px',\n    '& a': {\n      color: 'white',\n      display: 'block',\n      textDecoration: 'underline',\n    },\n  },\n  icon: {\n    // border: '1px solid',\n    // borderRadius: '50%',\n    // padding: 10,\n    marginRight: 10,\n    display: 'inline-flex',\n  },\n  close: {\n    position: 'absolute',\n    top: 5,\n    right: 5,\n    cursor: 'pointer',\n  },\n  tx: {\n    background: '#2196f3',\n  },\n  error: {\n    background: '#d32f2f',\n  },\n  success: {\n    background: '#43a047',\n  },\n  small: {\n    fontSize: 12,\n  },\n}));\n\nconst Notification: FC<{ id: SnackbarKey; notification: any }> = ({\n  id,\n  notification,\n}) => {\n  const classes = useStyles();\n  const { closeSnackbar } = useSnackbar();\n  const clearNotification = () => closeSnackbar(id);\n\n  const TYPES: Map<string, any[]> = new Map([\n    ['tx', [TxIcon, TxContent]],\n    ['error', [ErrorIcon, ErrorContent]],\n    ['success', [SuccessIcon, SuccessContent]],\n  ]);\n\n  const [, Content] = TYPES.get(notification.type)!;\n\n  const notificationClass = useMemo(() => {\n    const c: Record<string, any> = {\n      tx: classes.tx,\n      error: classes.error,\n      success: classes.success,\n    };\n    return c[notification.type]!;\n  }, [notification.type, classes.error, classes.success, classes.tx]);\n\n  return (\n    <Paper className={clsx(classes.paper, notificationClass)}>\n      <div className={classes.close} onClick={clearNotification}>\n        <CloseIcon style={{ fontSize: 15 }} />\n      </div>\n      <div\n        className={clsx('flex', 'flex-grow', 'items-center', classes.container)}\n      >\n        <div\n          className={clsx('flex', 'flex-grow', 'flex-col', 'justify-center')}\n        >\n          <Content {...{ notification }} />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nconst TxContent: FC<{ notification: any }> = ({ notification }) => {\n  const classes = useStyles();\n  const { network } = useWallet();\n\n  const isMainnet = network === NETWORK_MAINNET;\n\n  return (\n    <>\n      <strong className={classes.small}>{notification.description}</strong>\n\n      <a\n        href={`https://${isMainnet ? '' : `${network}.`}etherscan.io/tx/${\n          notification.hash\n        }`}\n        target='_blank'\n        rel='noopener noreferrer'\n        className={classes.small}\n      >\n        View on EtherScan\n      </a>\n    </>\n  );\n};\n\nconst ErrorContent: FC<{ notification: any }> = ({ notification }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <strong className={clsx(classes.small, classes.error)}>\n        {notification.message}\n      </strong>\n    </>\n  );\n};\n\nconst SuccessContent: FC<{ notification: any }> = ({ notification }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div>{notification.title}</div>\n      <strong className={clsx(classes.small, classes.success)}>\n        {notification.message}\n      </strong>\n    </>\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}