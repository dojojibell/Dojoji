{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/Dojoji/src/contexts/ui.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UIContext = /*#__PURE__*/createContext(null);\nexport const UIProvider = ({\n  children\n}) => {\n  _s();\n\n  const [notification, notify] = useState(null);\n\n  const showErrorNotification = e => {\n    notify(e.message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UIContext.Provider, {\n    value: {\n      notification,\n      notify,\n      showErrorNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UIProvider, \"g9gRqag2Tb76DpqI6uYuEB0Lwqs=\");\n\n_c = UIProvider;\nexport function useUI() {\n  _s2();\n\n  const context = useContext(UIContext);\n\n  if (!context) {\n    throw new Error('Missing UI context');\n  }\n\n  const {\n    notification,\n    notify,\n    showErrorNotification\n  } = context;\n  return {\n    notification,\n    notify,\n    showErrorNotification\n  };\n}\n\n_s2(useUI, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UIProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Dojoji/src/contexts/ui.tsx"],"names":["useState","useContext","createContext","UIContext","UIProvider","children","notification","notify","showErrorNotification","e","message","useUI","context","Error"],"mappings":";;;;AAAA,SAAaA,QAAb,EAAuBC,UAAvB,EAAmCC,aAAnC,QAAmE,OAAnE;;AAEA,MAAMC,SAAS,gBAAGD,aAAa,CAIrB,IAJqB,CAA/B;AAMA,OAAO,MAAME,UAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACvE,QAAM,CAACC,YAAD,EAAeC,MAAf,IAAyBP,QAAQ,CAAgB,IAAhB,CAAvC;;AAEA,QAAMQ,qBAAqB,GAAIC,CAAD,IAAY;AACxCF,IAAAA,MAAM,CAACE,CAAC,CAACC,OAAH,CAAN;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD,CAAW,QAAX;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,YADK;AAELC,MAAAA,MAFK;AAGLC,MAAAA;AAHK,KADT;AAAA,cAOGH;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBM;;GAAMD,U;;KAAAA,U;AAoBb,OAAO,SAASO,KAAT,GAAiB;AAAA;;AACtB,QAAMC,OAAO,GAAGX,UAAU,CAACE,SAAD,CAA1B;;AACA,MAAI,CAACS,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACD,QAAM;AAAEP,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAkDI,OAAxD;AAEA,SAAO;AACLN,IAAAA,YADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;IAZeG,K","sourcesContent":["import { FC, useState, useContext, createContext, ReactNode } from 'react';\n\nconst UIContext = createContext<{\n  notification: string | null;\n  notify: (notification: string | null) => void;\n  showErrorNotification: (e: any | null) => void;\n} | null>(null);\n\nexport const UIProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const [notification, notify] = useState<string | null>(null);\n\n  const showErrorNotification = (e: any) => {\n    notify(e.message);\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        notification,\n        notify,\n        showErrorNotification,\n      }}\n    >\n      {children}\n    </UIContext.Provider>\n  );\n};\n\nexport function useUI() {\n  const context = useContext(UIContext);\n  if (!context) {\n    throw new Error('Missing UI context');\n  }\n  const { notification, notify, showErrorNotification } = context;\n\n  return {\n    notification,\n    notify,\n    showErrorNotification,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}